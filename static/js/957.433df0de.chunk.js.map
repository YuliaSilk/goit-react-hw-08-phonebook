{"version":3,"file":"static/js/957.433df0de.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.js","components/ContactsForm/ContactsForm.styled.js","redux/selectors.js","components/ContactsForm/ContactsForm.js","components/Contacts/Contacts.js","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Pages/ContactPage.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 8px;\n  gap: 16px;\n  width: 460px;\n  font-size: 16px;\n  border-radius: 15px;\n  color: ${({ theme }) => theme.colors.text};\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputColor}\n  }\n`;\n\n\n\nexport const DeleteBtn = styled.button`\ncursor: pointer;\nbackground: transparent;\nborder-radius: 15px;\nborder: 1px solid ${({ theme }) => theme.colors.border};\ncolor: ${({ theme }) => theme.colors.text};\ndisplay: inline-block;\nmargin: 0.5rem 1rem;\npadding: 0.5rem 0;\ntransition: all 200ms ease-in-out;\nwidth: 100px;\n\n&:hover {\n  color: #fff;\n  background: ${({ theme }) => theme.colors.error};\n}\n`;\n\nexport const ContactHeaderStyle = styled.h2`\nfont-size: 42px;\nfont-weight: 200;\nmargin: 0;\nmargin-top: 16px;\ncolor:${({ theme }) => theme.colors.header};\n`;\n\nexport const ContactsContainer = styled.div`\ndisplay: flex;\nmax-width: 600px;\nflex-direction: column;\ngap: 8px;\n/* margin: 0 auto; */\n`;\n\nexport const PhonebookContainer = styled.div`\nwidth: 500px;\npadding: 20px;\nbackground-color: ${({ theme }) => theme.colors.backgraund};\nborder-radius: 15px;\n`;","import styled from \"styled-components\";\nimport { Field, Form, ErrorMessage } from \"formik\";\n\nexport const FormStyle = styled.div`\ndisplay: flex;\nwidth: 360px;\nflex-direction: column;\nmargin-bottom: 4px;\ngap: 10px;\n\n`;\n\nexport const FormTittle = styled.h2`\nfont-size: 62px;\nwidth: 400px;\nfont-weight: 200;\ncolor: ${({ theme }) => theme.colors.header};\nmargin: 0;\nmargin-bottom: 12px;\n`;\n\nexport const FormContainer = styled(Form)`\ndisplay: flex;\nwidth: 360px;\nflex-direction: column;\nmargin-bottom: 4px;\ngap: 10px;\n`\n\nexport const FormName = styled.label`\nwidth: 300px;\npadding: 4px;\nfont-size: 18px;\nfont-weight: 600;\ncolor: ${({ theme }) => theme.colors.acent};\n`;\n\nexport const AddBtn = styled.button`\n    margin: 0 auto;\n    width: 150px;\n    font-size: 16px;\n    font-weight: 600;\n    color: ${({ theme }) => theme.colors.acent};\n    cursor: pointer;\n   \n    height: 40px;\n    text-align:center;\n    border: 1px solid ${({ theme }) => theme.colors.border};\n    background-size: 300% 100%;\n    background: transparent;\n    border-radius: 50px;\n    moz-transition: all .4s ease-in-out;\n    -o-transition: all .4s ease-in-out;\n    -webkit-transition: all .4s ease-in-out;\n    transition: all .4s ease-in-out;\n\n&:hover{\n    border: none;\n    background-position: 100% 0;\n    moz-transition: all .4s ease-in-out;\n    -o-transition: all .4s ease-in-out;\n    -webkit-transition: all .4s ease-in-out;\n    transition: all .4s ease-in-out; \n    box-shadow: inset 0 -3.25em 0 0 ${({ theme }) => theme.colors.border};\n}\n&:focus {\n    outline: none;\n}\n`;\n\n\n\n\nexport const ErrMsg = styled(ErrorMessage)`\ncolor: ${({ theme }) => theme.colors.error};\nfont-size: 16px;\nmargin-top: 4px;\nwidth: auto;\n`;\n\nexport const FormField = styled(Field)`\nmargin-top: 4px;\nwidth: 360px;\npadding: 5px;\nfont-size: 16px;\ncolor:${({ theme }) => theme.colors.inputColor};\noutline: none;\nborder-radius: 15px;\nborder-color: ${({ theme }) => theme.colors.border};\n\n&:hover{\n    border-color: #25aae1;\n    box-shadow: 0 4px 15px 0 rgba(49, 196, 190, 0.75);\n\n}\n\n`\n\n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\n// export const selectContacts = (store) => store.contacts.contacts;\n// export const selectFilter = (store) => store.filter.value;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector (\n    [selectContacts, selectFilter], (contacts, filter) => {\nreturn contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n    }\n) \n\n\n","import { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { AddBtn, FormName, FormStyle, FormField, ErrMsg, FormContainer } from \"./ContactsForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/selectors\";\nimport Notiflix from \"notiflix\";\nimport { addContact } from \"redux/operations\";\n\nconst FormSchema = Yup.object().shape({\n    name: Yup.string()\n    .matches(/^[a-zA-Zа-яА-Я]+(([' /-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, 'Invalid name format')\n    .min(2, 'Too short contacts name!')\n    .max(15, 'Too long contacts name!')\n    .required('Required'),\n\n    phone: Yup.string()\n    .matches(/^\\+?\\d{1,4}([ ./-]?\\d{1,3})?([ ./-]?\\d{1,4})+$/, 'Invalid phone number format')\n    .required('Required'),\n  });\n  \n\n  export const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n\n    return (\n     <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={FormSchema}\n        onSubmit={(values, actions) => {\n          if (contacts.find(contact => contact.name === values.name.trim())) {\n            Notiflix.Notify.failure('This contact has already been added!');\n          } else {\n            dispatch(addContact({\n              id: '',\n              name: values.name.trim(),\n              number: values.number.trim(),\n            }))\n          };\n          Notiflix.Notify.success('The contact succefully added!');\n          actions.resetForm()\n          \n        }}\n      >\n        <FormStyle>\n      \n        <FormContainer>\n       \n        <FormName>Name \n          <FormField name=\"name\" placeholder=\"Enter contact name\" />\n          <ErrMsg component=\"div\" name=\"name\" />\n        </FormName>\n        <FormName>Phone number\n          <FormField name=\"number\" placeholder=\"Enter phone number\" type=\"tel\"/>\n          <ErrMsg component=\"div\" name=\"number\" />\n        </FormName>\n\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n       \n      </FormContainer>\n      </FormStyle>\n      </Formik>\n    \n  )};\n\n","import { useDispatch } from \"react-redux\";\nimport { ContactItem, DeleteBtn } from \"./Contacts.styled\"\nimport { deleteContact } from \"redux/operations\";\n\n\nexport const Contact = ({ contact: { id, name, phone } }) => {\n    const dispatch = useDispatch();\n    const toDeleteContact = contactId => {\n        dispatch(deleteContact(contactId));\n    \n}\nreturn (\n    <ContactItem>\n        <p>{name}: {phone}</p>\n        <DeleteBtn type=\"button\" \n        onClick={() => toDeleteContact(id)}>\n            Delete\n        </DeleteBtn>\n    </ContactItem>\n)}\n\n","import styled from \"styled-components\";\n\nexport const ContactsList = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\npadding: 0;\n\nwidth: 400px;\n\ncolor: ${({ theme }) => theme.colors.main};\ngap: 10px;\nmargin-bottom: 10px;\nborder-radius: 15px;\n\n&:hover {\n    color: blue;\n}\n`;\n\nexport const ContactContainer = styled.div`\n   \n    width: 360px;\n    gap: 10px;\n    height: auto;\n   \n\n`;","import { Contact } from \"components/Contacts/Contacts\";\nimport { ContactsList, ContactContainer } from './ContactsList.styled';\nimport { useSelector } from \"react-redux\";\nimport { selectVisibleContacts } from \"redux/selectors\";\n\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <ContactContainer>\n            <ContactsList>\n                {visibleContacts.map(contact => \n                   <Contact\n                    key={contact.id}\n                    contact={contact}\n                    />\n                    )}   \n            </ContactsList>\n        </ContactContainer>\n    );\n} \n","import styled from \"styled-components\";\n\nexport const FilterStyle = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 12px;\n`\nexport const TextToDo = styled.p`\ncolor: ${({ theme }) => theme.colors.acent};\nfont-size: 14px;\nmargin-bottom: 4px;\n`\n\nexport const FilterInputStyle = styled.input`\nwidth: 360px;\npadding: 5px;\nfont-size: 16px;\ncolor:${({ theme }) => theme.colors.inputColor};\nborder-radius: 15px;\nborder-color: ${({ theme }) => theme.colors.border};\noutline: none;\n&:hover {\n    border-color: #25aae1;\n    box-shadow: 0 4px 15px 0 rgba(49, 196, 190, 0.75);\n}\n`","import { FilterInputStyle, FilterStyle, TextToDo } from './Filter.styled'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { onChangeFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n    const value = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const onChange = (evt) => {\n        const normalizeValue = evt.target.value.toLowerCase();\n        dispatch(onChangeFilter(normalizeValue));\n    }\n    return (\n        <FilterStyle>\n          <TextToDo>Find contacts by name</TextToDo>\n            <FilterInputStyle\n            type=\"text\"\n            value={value}\n            placeholder=\"Please, enter a name\"\n            onChange={onChange}\n            />\n        </FilterStyle>\n    )\n}\n\n\n","import { ContactsContainer, PhonebookContainer, ContactHeaderStyle } from \"components/Contacts/Contacts.styled\";\nimport { ContactForm } from \"components/ContactsForm/ContactsForm\";\nimport { FormTittle } from \"components/ContactsForm/ContactsForm.styled\";\nimport { ContactList } from \"components/ContactsList/ContactsList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectIsLoading } from \"redux/selectors\";\nimport { selectContacts } from \"redux/selectors\";\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <PhonebookContainer>\n        <Helmet>\n            <FormTittle>\n            Phonebook\n            </FormTittle>\n        </Helmet>\n        <ContactForm />\n        <ContactsContainer>\n        <ContactHeaderStyle>Contacts</ContactHeaderStyle>\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        {contacts.length > 0 && (  <ContactList />)}\n        </ContactsContainer>\n        </PhonebookContainer>\n    )\n}\n\n\n"],"names":["ContactItem","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","text","_ref2","inputColor","DeleteBtn","_templateObject2","_ref3","border","_ref4","_ref5","error","ContactHeaderStyle","_templateObject3","_ref6","header","ContactsContainer","_templateObject4","PhonebookContainer","_templateObject5","_ref7","backgraund","FormStyle","FormTittle","FormContainer","Form","FormName","acent","AddBtn","ErrMsg","ErrorMessage","_templateObject6","FormField","Field","_templateObject7","_ref8","selectContacts","state","contacts","selectFilter","filter","value","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","FormSchema","Yup","shape","matches","min","max","required","phone","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","number","validationSchema","onSubmit","values","actions","find","trim","Notiflix","addContact","id","resetForm","children","_jsxs","placeholder","component","type","Contact","_ref$contact","onClick","contactId","deleteContact","ContactsList","main","ContactContainer","ContactList","visibleContacts","map","FilterStyle","TextToDo","FilterInputStyle","Filter","onChange","evt","normalizeValue","target","onChangeFilter","Contacts","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}